{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\patil\\\\Desktop\\\\Blog Application Project\\\\Test\\\\blog-app-main (2)\\\\blog-app-main\\\\src\\\\pages\\\\Signup.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { signUp } from \"../services/user-service\";\nimport { toast } from \"react-toastify\";\nimport { Button, Card, CardBody, CardHeader, Col, Container, Form, FormFeedback, FormGroup, Input, Label, Row } from \"reactstrap\";\nimport { Link, NavLink as ReactLink, useNavigate } from \"react-router-dom\";\nimport Base from \"../components/Base\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Signup = () => {\n  _s();\n\n  var _error$errors, _error$errors$respons, _error$errors$respons2, _error$errors2, _error$errors2$respon, _error$errors2$respon2, _error$errors3, _error$errors3$respon, _error$errors3$respon2, _error$errors4, _error$errors4$respon, _error$errors4$respon2, _error$errors5, _error$errors5$respon, _error$errors5$respon2, _error$errors6, _error$errors6$respon, _error$errors6$respon2, _error$errors7, _error$errors7$respon, _error$errors7$respon2, _error$errors8, _error$errors8$respon, _error$errors8$respon2;\n\n  const [data, setData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    about: \"\"\n  });\n  const [error, setError] = useState({\n    errors: {},\n    isError: false\n  }); // handle change\n\n  const handleChange = (event, property) => {\n    //dynamic setting the values\n    setData({ ...data,\n      [property]: event.target.value\n    });\n  }; //reseting the form\n\n\n  const resetData = () => {\n    setData({\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      about: \"\"\n    });\n  }; //submit the form\n\n\n  const submitForm = event => {\n    event.preventDefault(); // if(error.isError){\n    //   toast.error(\"Form data is invalid , correct all details then submit. \");\n    //   setError({...error,isError:false})\n    //   return;\n    // }\n\n    console.log(data); //data validate\n    //call server api for sending data\n\n    signUp(data).then(resp => {\n      console.log(resp);\n      console.log(\"success log\");\n      toast.success(\"User is registered successfully !! Welcome \" + resp.name);\n      setData({\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        about: \"\"\n      });\n      navigate(\"/user/dashboard\");\n    }).catch(error => {\n      console.log(error);\n      console.log(\"Error log\"); //handle errors in proper way\n\n      setError({\n        errors: error,\n        isError: true\n      });\n    });\n  };\n\n  return (\n    /*#__PURE__*/\n    // <Base>\n    //   <Container>\n    //     <Row className=\"mt-4\">\n    //       {/* { JSON.stringify(data) } */}\n    //       <Col sm={{ size: 6, offset: 3 }}>\n    //         <Card color=\"dark\" inverse>\n    //           <CardHeader>\n    //             <h3> Fill Information to Register !!</h3>\n    //           </CardHeader>\n    //           <CardBody>\n    //             {/* creating form */}\n    //             <Form onSubmit={submitForm}>\n    //               {/* Name field */}\n    //               <FormGroup>\n    //                 <Label for=\"name\">Enter Name</Label>\n    //                 <Input\n    //                   type=\"text\"\n    //                   placeholder=\"Enter here\"\n    //                   id=\"name\"\n    //                   onChange={(e) => handleChange(e, \"name\")}\n    //                   value={data.name}\n    //                   invalid={\n    //                     error.errors?.response?.data?.name ? true : false\n    //                   }\n    //                 />\n    //                 <FormFeedback>\n    //                   {error.errors?.response?.data?.name}\n    //                 </FormFeedback>\n    //               </FormGroup>\n    //               {/* email field */}\n    //               <FormGroup>\n    //                 <Label for=\"email\">Enter Email</Label>\n    //                 <Input\n    //                   type=\"email\"\n    //                   placeholder=\"Enter here\"\n    //                   id=\"email\"\n    //                   onChange={(e) => handleChange(e, \"email\")}\n    //                   value={data.email}\n    //                   invalid={\n    //                     error.errors?.response?.data?.email ? true : false\n    //                   }\n    //                 />\n    //                 <FormFeedback>\n    //                   {error.errors?.response?.data?.email}\n    //                 </FormFeedback>\n    //               </FormGroup>\n    //               {/* password field */}\n    //               <FormGroup>\n    //                 <Label for=\"password\">Enter password</Label>\n    //                 <Input\n    //                   type=\"password\"\n    //                   placeholder=\"Enter here\"\n    //                   id=\"password\"\n    //                   onChange={(e) => handleChange(e, \"password\")}\n    //                   value={data.password}\n    //                   invalid={\n    //                     error.errors?.response?.data?.password ? true : false\n    //                   }\n    //                 />\n    //                 <FormFeedback>\n    //                   {error.errors?.response?.data?.password}\n    //                 </FormFeedback>\n    //               </FormGroup>\n    //               {/* about field */}\n    //               <FormGroup>\n    //                 <Label for=\"about\">Write something about yourself</Label>\n    //                 <Input\n    //                   type=\"textarea\"\n    //                   placeholder=\"Enter here\"\n    //                   id=\"about\"\n    //                   style={{ height: \"250px\" }}\n    //                   onChange={(e) => handleChange(e, \"about\")}\n    //                   value={data.about}\n    //                   invalid={\n    //                     error.errors?.response?.data?.about ? true : false\n    //                   }\n    //                 />\n    //                 <FormFeedback>\n    //                   {error.errors?.response?.data?.about}\n    //                 </FormFeedback>\n    //               </FormGroup>\n    //               <Container className=\"text-center\">\n    //                 <Button outline color=\"light\">\n    //                   Register\n    //                 </Button>\n    //                 <Button\n    //                   onClick={resetData}\n    //                   color=\"secondary\"\n    //                   type=\"reset\"\n    //                   className=\"ms-2\"\n    //                 >\n    //                   Reset\n    //                 </Button>\n    //               </Container>\n    //             </Form>\n    //           </CardBody>\n    //         </Card>\n    //       </Col>\n    //     </Row>\n    //   </Container>\n    // </Base>\n    //<Base>\n    _jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          sm: {\n            size: 6,\n            offset: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Container, {\n            className: \"text-center mt-4 mb-4\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              style: {\n                textDecoration: \"none\"\n              },\n              tag: ReactLink,\n              to: \"/\",\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"text-warning text-center\",\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"MyBlog\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Card, {\n            className: \"shadow p-3 mb-5 bg-white rounded\",\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Create a new account\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 15\n              }, this), \"It's quick and easy.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                onSubmit: submitForm,\n                children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(Input, {\n                    type: \"text\",\n                    placeholder: \"Name\",\n                    id: \"name\",\n                    onChange: e => handleChange(e, \"name\"),\n                    value: data.name,\n                    invalid: (_error$errors = error.errors) !== null && _error$errors !== void 0 && (_error$errors$respons = _error$errors.response) !== null && _error$errors$respons !== void 0 && (_error$errors$respons2 = _error$errors$respons.data) !== null && _error$errors$respons2 !== void 0 && _error$errors$respons2.name ? true : false\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 226,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(FormFeedback, {\n                    children: (_error$errors2 = error.errors) === null || _error$errors2 === void 0 ? void 0 : (_error$errors2$respon = _error$errors2.response) === null || _error$errors2$respon === void 0 ? void 0 : (_error$errors2$respon2 = _error$errors2$respon.data) === null || _error$errors2$respon2 === void 0 ? void 0 : _error$errors2$respon2.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(Input, {\n                    type: \"email\",\n                    placeholder: \"Email address\",\n                    id: \"email\",\n                    onChange: e => handleChange(e, \"email\"),\n                    value: data.email,\n                    invalid: (_error$errors3 = error.errors) !== null && _error$errors3 !== void 0 && (_error$errors3$respon = _error$errors3.response) !== null && _error$errors3$respon !== void 0 && (_error$errors3$respon2 = _error$errors3$respon.data) !== null && _error$errors3$respon2 !== void 0 && _error$errors3$respon2.email ? true : false\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 242,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(FormFeedback, {\n                    children: (_error$errors4 = error.errors) === null || _error$errors4 === void 0 ? void 0 : (_error$errors4$respon = _error$errors4.response) === null || _error$errors4$respon === void 0 ? void 0 : (_error$errors4$respon2 = _error$errors4$respon.data) === null || _error$errors4$respon2 === void 0 ? void 0 : _error$errors4$respon2.email\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 250,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(Input, {\n                    type: \"password\",\n                    placeholder: \"New Password\",\n                    id: \"password\",\n                    onChange: e => handleChange(e, \"password\"),\n                    value: data.password,\n                    invalid: (_error$errors5 = error.errors) !== null && _error$errors5 !== void 0 && (_error$errors5$respon = _error$errors5.response) !== null && _error$errors5$respon !== void 0 && (_error$errors5$respon2 = _error$errors5$respon.data) !== null && _error$errors5$respon2 !== void 0 && _error$errors5$respon2.password ? true : false\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 257,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(FormFeedback, {\n                    children: (_error$errors6 = error.errors) === null || _error$errors6 === void 0 ? void 0 : (_error$errors6$respon = _error$errors6.response) === null || _error$errors6$respon === void 0 ? void 0 : (_error$errors6$respon2 = _error$errors6$respon.data) === null || _error$errors6$respon2 === void 0 ? void 0 : _error$errors6$respon2.password\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                    for: \"about\",\n                    children: \"Write something about yourself\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 275,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    type: \"textarea\",\n                    placeholder: \"Enter here\",\n                    id: \"about\",\n                    style: {\n                      height: \"100px\"\n                    },\n                    onChange: e => handleChange(e, \"about\"),\n                    value: data.about,\n                    invalid: (_error$errors7 = error.errors) !== null && _error$errors7 !== void 0 && (_error$errors7$respon = _error$errors7.response) !== null && _error$errors7$respon !== void 0 && (_error$errors7$respon2 = _error$errors7$respon.data) !== null && _error$errors7$respon2 !== void 0 && _error$errors7$respon2.about ? true : false\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 276,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(FormFeedback, {\n                    children: (_error$errors8 = error.errors) === null || _error$errors8 === void 0 ? void 0 : (_error$errors8$respon = _error$errors8.response) === null || _error$errors8$respon === void 0 ? void 0 : (_error$errors8$respon2 = _error$errors8$respon.data) === null || _error$errors8$respon2 === void 0 ? void 0 : _error$errors8$respon2.about\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 287,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Container, {\n                  className: \"text-center\",\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    color: \"success\",\n                    children: \"Register\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 292,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: resetData,\n                    color: \"secondary\",\n                    type: \"reset\",\n                    className: \"ms-2\",\n                    children: \"Reset\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 293,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 5\n    }, this) //</Base>\n\n  );\n};\n\n_s(Signup, \"/PTbgxodZz3cpSazkpmGAlHMTcI=\");\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["useEffect","useState","signUp","toast","Button","Card","CardBody","CardHeader","Col","Container","Form","FormFeedback","FormGroup","Input","Label","Row","Link","NavLink","ReactLink","useNavigate","Base","Signup","data","setData","name","email","password","about","error","setError","errors","isError","handleChange","event","property","target","value","resetData","submitForm","preventDefault","console","log","then","resp","success","navigate","catch","size","offset","textDecoration","e","response","height"],"sources":["C:/Users/patil/Desktop/Blog Application Project/Test/blog-app-main (2)/blog-app-main/src/pages/Signup.js"],"sourcesContent":["import { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { signUp } from \"../services/user-service\";\nimport { toast } from \"react-toastify\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Container,\n  Form,\n  FormFeedback,\n  FormGroup,\n  Input,\n  Label,\n  Row,\n} from \"reactstrap\";\nimport { Link, NavLink as ReactLink, useNavigate } from \"react-router-dom\";\nimport Base from \"../components/Base\";\nconst Signup = () => {\n  \n  const [data, setData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    about: \"\",\n  });\n\n  const [error, setError] = useState({\n    errors: {},\n    isError: false,\n  });\n\n  // handle change\n  const handleChange = (event, property) => {\n    //dynamic setting the values\n    setData({ ...data, [property]: event.target.value });\n  };\n\n  //reseting the form\n  const resetData = () => {\n    setData({\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      about: \"\",\n    });\n  };\n\n  //submit the form\n  const submitForm = (event) => {\n    event.preventDefault();\n    \n    // if(error.isError){\n    //   toast.error(\"Form data is invalid , correct all details then submit. \");\n    //   setError({...error,isError:false})\n    //   return;\n    // }\n\n    console.log(data);\n    //data validate\n\n    //call server api for sending data\n    signUp(data)\n      .then((resp) => {\n        console.log(resp);\n        console.log(\"success log\");\n        toast.success(\"User is registered successfully !! Welcome \" + resp.name);\n        setData({\n          name: \"\",\n          email: \"\",\n          password: \"\",\n          about: \"\",\n        });\n        navigate(\"/user/dashboard\")\n      })\n      .catch((error) => {\n        console.log(error);\n        console.log(\"Error log\");\n        //handle errors in proper way\n        setError({\n          errors: error,\n          isError: true,\n        });\n      });\n  };\n\n  return (\n    // <Base>\n    //   <Container>\n    //     <Row className=\"mt-4\">\n    //       {/* { JSON.stringify(data) } */}\n\n    //       <Col sm={{ size: 6, offset: 3 }}>\n    //         <Card color=\"dark\" inverse>\n    //           <CardHeader>\n    //             <h3> Fill Information to Register !!</h3>\n    //           </CardHeader>\n\n    //           <CardBody>\n    //             {/* creating form */}\n\n    //             <Form onSubmit={submitForm}>\n    //               {/* Name field */}\n    //               <FormGroup>\n    //                 <Label for=\"name\">Enter Name</Label>\n    //                 <Input\n    //                   type=\"text\"\n    //                   placeholder=\"Enter here\"\n    //                   id=\"name\"\n    //                   onChange={(e) => handleChange(e, \"name\")}\n    //                   value={data.name}\n    //                   invalid={\n    //                     error.errors?.response?.data?.name ? true : false\n    //                   }\n    //                 />\n\n    //                 <FormFeedback>\n    //                   {error.errors?.response?.data?.name}\n    //                 </FormFeedback>\n    //               </FormGroup>\n\n    //               {/* email field */}\n    //               <FormGroup>\n    //                 <Label for=\"email\">Enter Email</Label>\n    //                 <Input\n    //                   type=\"email\"\n    //                   placeholder=\"Enter here\"\n    //                   id=\"email\"\n    //                   onChange={(e) => handleChange(e, \"email\")}\n    //                   value={data.email}\n    //                   invalid={\n    //                     error.errors?.response?.data?.email ? true : false\n    //                   }\n    //                 />\n\n    //                 <FormFeedback>\n    //                   {error.errors?.response?.data?.email}\n    //                 </FormFeedback>\n    //               </FormGroup>\n\n    //               {/* password field */}\n    //               <FormGroup>\n    //                 <Label for=\"password\">Enter password</Label>\n    //                 <Input\n    //                   type=\"password\"\n    //                   placeholder=\"Enter here\"\n    //                   id=\"password\"\n    //                   onChange={(e) => handleChange(e, \"password\")}\n    //                   value={data.password}\n    //                   invalid={\n    //                     error.errors?.response?.data?.password ? true : false\n    //                   }\n    //                 />\n\n    //                 <FormFeedback>\n    //                   {error.errors?.response?.data?.password}\n    //                 </FormFeedback>\n    //               </FormGroup>\n\n    //               {/* about field */}\n    //               <FormGroup>\n    //                 <Label for=\"about\">Write something about yourself</Label>\n    //                 <Input\n    //                   type=\"textarea\"\n    //                   placeholder=\"Enter here\"\n    //                   id=\"about\"\n    //                   style={{ height: \"250px\" }}\n    //                   onChange={(e) => handleChange(e, \"about\")}\n    //                   value={data.about}\n    //                   invalid={\n    //                     error.errors?.response?.data?.about ? true : false\n    //                   }\n    //                 />\n\n    //                 <FormFeedback>\n    //                   {error.errors?.response?.data?.about}\n    //                 </FormFeedback>\n    //               </FormGroup>\n\n    //               <Container className=\"text-center\">\n    //                 <Button outline color=\"light\">\n    //                   Register\n    //                 </Button>\n    //                 <Button\n    //                   onClick={resetData}\n    //                   color=\"secondary\"\n    //                   type=\"reset\"\n    //                   className=\"ms-2\"\n    //                 >\n    //                   Reset\n    //                 </Button>\n    //               </Container>\n    //             </Form>\n    //           </CardBody>\n    //         </Card>\n    //       </Col>\n    //     </Row>\n    //   </Container>\n    // </Base>\n    //<Base>\n    <Container>\n      <Row>\n        <Col sm={{ size: 6, offset: 3 }}>\n          <Container className=\"text-center mt-4 mb-4\">\n            <Link style={{ textDecoration: \"none\" }} tag={ReactLink} to=\"/\">\n              <h1 className=\"text-warning text-center\">\n                <b>MyBlog</b>\n              </h1>\n            </Link>\n          </Container>\n          <Card className=\"shadow p-3 mb-5 bg-white rounded\">\n            <CardHeader className=\"text-center\">\n              <h5>\n                <b>Create a new account</b>\n              </h5>\n              It's quick and easy.\n            </CardHeader>\n\n            <CardBody>\n              {/* creating registerbody */}\n              <Form onSubmit={submitForm}>\n                {/* namefild */}\n                <FormGroup>\n                  <Input\n                    type=\"text\"\n                    placeholder=\"Name\"\n                    id=\"name\"\n                    onChange={(e) => handleChange(e, \"name\")}\n                    value={data.name}\n                    invalid={error.errors?.response?.data?.name ? true : false}\n                  />\n\n                  <FormFeedback>\n                    {error.errors?.response?.data?.name}\n                  </FormFeedback>\n                </FormGroup>\n\n                {/* Emailfild */}\n                <FormGroup>\n                  <Input\n                    type=\"email\"\n                    placeholder=\"Email address\"\n                    id=\"email\"\n                    onChange={(e) => handleChange(e, \"email\")}\n                    value={data.email}\n                    invalid={error.errors?.response?.data?.email ? true : false}\n                  />\n                  <FormFeedback>\n                    {error.errors?.response?.data?.email}\n                  </FormFeedback>\n                </FormGroup>\n\n                {/* Passwordfild */}\n                <FormGroup>\n                  <Input\n                    type=\"password\"\n                    placeholder=\"New Password\"\n                    id=\"password\"\n                    onChange={(e) => handleChange(e, \"password\")}\n                    value={data.password}\n                    invalid={\n                      error.errors?.response?.data?.password ? true : false\n                    }\n                  />\n\n                  <FormFeedback>\n                    {error.errors?.response?.data?.password}\n                  </FormFeedback> \n                </FormGroup>\n\n                {/* about field */}\n                <FormGroup>\n                  <Label for=\"about\">Write something about yourself</Label>\n                  <Input\n                    type=\"textarea\"\n                    placeholder=\"Enter here\"\n                    id=\"about\"\n                    style={{ height: \"100px\" }}\n                    onChange={(e) => handleChange(e, \"about\")}\n                      value={data.about}\n                      invalid={\n                        error.errors?.response?.data?.about ? true : false\n                      }\n                  />\n                  <FormFeedback>\n                      {error.errors?.response?.data?.about}\n                    </FormFeedback>\n                </FormGroup>\n                <Container className=\"text-center\">\n                  <Button color=\"success\">Register</Button>\n                  <Button\n                    onClick={resetData}\n                    color=\"secondary\"\n                    type=\"reset\"\n                    className=\"ms-2\"\n                  >\n                    Reset\n                  </Button>\n                </Container>\n              </Form>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n    //</Base>\n  );\n};\n\nexport default Signup;\n"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,MAAT,QAAuB,0BAAvB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SACEC,MADF,EAEEC,IAFF,EAGEC,QAHF,EAIEC,UAJF,EAKEC,GALF,EAMEC,SANF,EAOEC,IAPF,EAQEC,YARF,EASEC,SATF,EAUEC,KAVF,EAWEC,KAXF,EAYEC,GAZF,QAaO,YAbP;AAcA,SAASC,IAAT,EAAeC,OAAO,IAAIC,SAA1B,EAAqCC,WAArC,QAAwD,kBAAxD;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;;AACA,MAAMC,MAAM,GAAG,MAAM;EAAA;;EAAA;;EAEnB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBtB,QAAQ,CAAC;IAC/BuB,IAAI,EAAE,EADyB;IAE/BC,KAAK,EAAE,EAFwB;IAG/BC,QAAQ,EAAE,EAHqB;IAI/BC,KAAK,EAAE;EAJwB,CAAD,CAAhC;EAOA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoB5B,QAAQ,CAAC;IACjC6B,MAAM,EAAE,EADyB;IAEjCC,OAAO,EAAE;EAFwB,CAAD,CAAlC,CATmB,CAcnB;;EACA,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;IACxC;IACAX,OAAO,CAAC,EAAE,GAAGD,IAAL;MAAW,CAACY,QAAD,GAAYD,KAAK,CAACE,MAAN,CAAaC;IAApC,CAAD,CAAP;EACD,CAHD,CAfmB,CAoBnB;;;EACA,MAAMC,SAAS,GAAG,MAAM;IACtBd,OAAO,CAAC;MACNC,IAAI,EAAE,EADA;MAENC,KAAK,EAAE,EAFD;MAGNC,QAAQ,EAAE,EAHJ;MAINC,KAAK,EAAE;IAJD,CAAD,CAAP;EAMD,CAPD,CArBmB,CA8BnB;;;EACA,MAAMW,UAAU,GAAIL,KAAD,IAAW;IAC5BA,KAAK,CAACM,cAAN,GAD4B,CAG5B;IACA;IACA;IACA;IACA;;IAEAC,OAAO,CAACC,GAAR,CAAYnB,IAAZ,EAT4B,CAU5B;IAEA;;IACApB,MAAM,CAACoB,IAAD,CAAN,CACGoB,IADH,CACSC,IAAD,IAAU;MACdH,OAAO,CAACC,GAAR,CAAYE,IAAZ;MACAH,OAAO,CAACC,GAAR,CAAY,aAAZ;MACAtC,KAAK,CAACyC,OAAN,CAAc,gDAAgDD,IAAI,CAACnB,IAAnE;MACAD,OAAO,CAAC;QACNC,IAAI,EAAE,EADA;QAENC,KAAK,EAAE,EAFD;QAGNC,QAAQ,EAAE,EAHJ;QAINC,KAAK,EAAE;MAJD,CAAD,CAAP;MAMAkB,QAAQ,CAAC,iBAAD,CAAR;IACD,CAZH,EAaGC,KAbH,CAaUlB,KAAD,IAAW;MAChBY,OAAO,CAACC,GAAR,CAAYb,KAAZ;MACAY,OAAO,CAACC,GAAR,CAAY,WAAZ,EAFgB,CAGhB;;MACAZ,QAAQ,CAAC;QACPC,MAAM,EAAEF,KADD;QAEPG,OAAO,EAAE;MAFF,CAAD,CAAR;IAID,CArBH;EAsBD,CAnCD;;EAquBACE,QAAC,GAAD;QAAA,uBACE,QAAC,GAAD;UAAK,EAAE,EAAE;YAAEgB,IAAI,EAAE,CAAR;YAAWC,MAAM,EAAE;UAAnB,CAAT;UAAA,wBACE,QAAC,SAAD;YAAW,SAAS,EAAC,uBAArB;YAAA,uBACE,QAAC,IAAD;cAAM,KAAK,EAAE;gBAAEC,cAAc,EAAE;cAAlB,CAAb;cAAyC,GAAG,EAAE/B,SAA9C;cAAyD,EAAE,EAAC,GAA5D;cAAA,uBACE;gBAAI,SAAS,EAAC,0BAAd;gBAAA,uBACE;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA;cADF;gBAAA;gBAAA;gBAAA;cAAA;YADF;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA,QADF,eAQE,QAAC,IAAD;YAAM,SAAS,EAAC,kCAAhB;YAAA,wBACE,QAAC,UAAD;cAAY,SAAS,EAAC,aAAtB;cAAA,wBACE;gBAAA,uBACE;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA;cADF;gBAAA;gBAAA;gBAAA;cAAA,QADF;YAAA;cAAA;cAAA;cAAA;YAAA,QADF,eAQE,QAAC,QAAD;cAAA,uBAEE,QAAC,IAAD;gBAAM,QAAQ,EAAEoB,UAAhB;gBAAA,wBAEE,QAAC,SAAD;kBAAA,wBACE,QAAC,KAAD;oBACE,IAAI,EAAC,MADP;oBAEE,WAAW,EAAC,MAFd;oBAGE,EAAE,EAAC,MAHL;oBAIE,QAAQ,EAAGY,CAAD,IAAOlB,YAAY,CAACkB,CAAD,EAAI,MAAJ,CAJ/B;oBAKE,KAAK,EAAE5B,IAAI,CAACE,IALd;oBAME,OAAO,EAAE,iBAAAI,KAAK,CAACE,MAAN,iFAAcqB,QAAd,kGAAwB7B,IAAxB,0EAA8BE,IAA9B,GAAqC,IAArC,GAA4C;kBANvD;oBAAA;oBAAA;oBAAA;kBAAA,QADF,eAUE,QAAC,YAAD;oBAAA,4BACGI,KAAK,CAACE,MADT,4EACG,eAAcqB,QADjB,oFACG,sBAAwB7B,IAD3B,2DACG,uBAA8BE;kBADjC;oBAAA;oBAAA;oBAAA;kBAAA,QAVF;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QAFF,eAkBE,QAAC,SAAD;kBAAA,wBACE,QAAC,KAAD;oBACE,IAAI,EAAC,OADP;oBAEE,WAAW,EAAC,eAFd;oBAGE,EAAE,EAAC,OAHL;oBAIE,QAAQ,EAAG0B,CAAD,IAAOlB,YAAY,CAACkB,CAAD,EAAI,OAAJ,CAJ/B;oBAKE,KAAK,EAAE5B,IAAI,CAACG,KALd;oBAME,OAAO,EAAE,kBAAAG,KAAK,CAACE,MAAN,mFAAcqB,QAAd,kGAAwB7B,IAAxB,0EAA8BG,KAA9B,GAAsC,IAAtC,GAA6C;kBANxD;oBAAA;oBAAA;oBAAA;kBAAA,QADF,eASE,QAAC,YAAD;oBAAA,4BACGG,KAAK,CAACE,MADT,4EACG,eAAcqB,QADjB,oFACG,sBAAwB7B,IAD3B,2DACG,uBAA8BG;kBADjC;oBAAA;oBAAA;oBAAA;kBAAA,QATF;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QAlBF,eAiCE,QAAC,SAAD;kBAAA,wBACE,QAAC,KAAD;oBACE,IAAI,EAAC,UADP;oBAEE,WAAW,EAAC,cAFd;oBAGE,EAAE,EAAC,UAHL;oBAIE,QAAQ,EAAGyB,CAAD,IAAOlB,YAAY,CAACkB,CAAD,EAAI,UAAJ,CAJ/B;oBAKE,KAAK,EAAE5B,IAAI,CAACI,QALd;oBAME,OAAO,EACL,kBAAAE,KAAK,CAACE,MAAN,mFAAcqB,QAAd,kGAAwB7B,IAAxB,0EAA8BI,QAA9B,GAAyC,IAAzC,GAAgD;kBAPpD;oBAAA;oBAAA;oBAAA;kBAAA,QADF,eAYE,QAAC,YAAD;oBAAA,4BACGE,KAAK,CAACE,MADT,4EACG,eAAcqB,QADjB,oFACG,sBAAwB7B,IAD3B,2DACG,uBAA8BI;kBADjC;oBAAA;oBAAA;oBAAA;kBAAA,QAZF;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QAjCF,eAmDE,QAAC,SAAD;kBAAA,wBACE,QAAC,KAAD;oBAAO,GAAG,EAAC,OAAX;oBAAA;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA,QADF,eAEE,QAAC,KAAD;oBACE,IAAI,EAAC,UADP;oBAEE,WAAW,EAAC,YAFd;oBAGE,EAAE,EAAC,OAHL;oBAIE,KAAK,EAAE;sBAAE0B,MAAM,EAAE;oBAAV,CAJT;oBAKE,QAAQ,EAAGF,CAAD,IAAOlB,YAAY,CAACkB,CAAD,EAAI,OAAJ,CAL/B;oBAMI,KAAK,EAAE5B,IAAI,CAACK,KANhB;oBAOI,OAAO,EACL,kBAAAC,KAAK,CAACE,MAAN,mFAAcqB,QAAd,kGAAwB7B,IAAxB,0EAA8BK,KAA9B,GAAsC,IAAtC,GAA6C;kBARnD;oBAAA;oBAAA;oBAAA;kBAAA,QAFF,eAaE,QAAC,YAAD;oBAAA,4BACKC,KAAK,CAACE,MADX,4EACK,eAAcqB,QADnB,oFACK,sBAAwB7B,IAD7B,2DACK,uBAA8BK;kBADnC;oBAAA;oBAAA;oBAAA;kBAAA,QAbF;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QAnDF,eAoEE,QAAC,SAAD;kBAAW,SAAS,EAAC,aAArB;kBAAA,wBACE,QAAC,MAAD;oBAAQ,KAAK,EAAC,SAAd;oBAAA;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA,QADF,eAEE,QAAC,MAAD;oBACE,OAAO,EAAEU,SADX;oBAEE,KAAK,EAAC,WAFR;oBAGE,IAAI,EAAC,OAHP;oBAIE,SAAS,EAAC,MAJZ;oBAAA;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA,QAFF;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QApEF;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YAFF;cAAA;cAAA;cAAA;YAAA,QARF;UAAA;YAAA;YAAA;YAAA;UAAA,QARF;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAlHF,CA2NE;;EA3NF;AA6ND,CAjSD;;GAAMhB,M;;KAAAA,M;AAmSN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}