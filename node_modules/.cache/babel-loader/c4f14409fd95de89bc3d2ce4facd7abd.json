{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\patil\\\\Desktop\\\\Blog Application Project\\\\Test\\\\blog-app-main (2)\\\\blog-app-main\\\\src\\\\pages\\\\Services.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { Row, Col, Pagination, PaginationItem, PaginationLink, Container } from 'reactstrap';\nimport Base from \"../components/Base\";\nimport { loadPostByCat } from \"../services/post-service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Services = () => {\n  _s();\n\n  //defining postContent\n  const [postContent, setPostContent] = useState(null); // to call a function for a first Time\n\n  useEffect(() => {\n    //load all posts from server\n    loadPostByCat().then(data => {\n      console.log(data);\n      setPostContent(data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n\n  const changePage = function () {\n    let pageNumber = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let pageSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 5;\n\n    if (pageNumber > postContent.pageNumber && postContent.lastPage) {\n      return;\n    }\n\n    if (pageNumber < postContent.pageNumber && postContent.pageNumber == 0) {\n      return;\n    }\n\n    loadAllPosts(pageNumber, pageSize).then(data => {\n      setPostContent({\n        content: [...postContent.content, ...data.content],\n        totalPages: data.totalPages,\n        totalElements: data.totalElements,\n        pageSize: data.pageSize,\n        lastPage: data.lastPage,\n        pageNumber: data.pageNumber\n      });\n      console.log(data);\n    }).catch(error => {\n      toast.error(\"Error in loading posts\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Base, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid pt-5 pe-1 ps-1\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: {\n            size: 10,\n            offset: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\"Blogs Count ( \", postContent === null || postContent === void 0 ? void 0 : postContent.totalElements, \" )\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Container, {\n            className: \"mt-3\",\n            children: /*#__PURE__*/_jsxDEV(Pagination, {\n              size: \"lg\",\n              children: [/*#__PURE__*/_jsxDEV(PaginationItem, {\n                onClick: () => changePage(postContent.pageNumber - 1),\n                disabled: postContent.pageNumber == 0,\n                children: /*#__PURE__*/_jsxDEV(PaginationLink, {\n                  previous: true,\n                  children: \"Previous\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 29\n              }, this), [...Array(postContent.totalPages)].map((item, index) => /*#__PURE__*/_jsxDEV(PaginationItem, {\n                onClick: () => changePage(index),\n                active: index == postContent.pageNumber,\n                children: /*#__PURE__*/_jsxDEV(PaginationLink, {\n                  children: index + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 41\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 37\n              }, this)), /*#__PURE__*/_jsxDEV(PaginationItem, {\n                onClick: () => changePage(postContent.pageNumber + 1),\n                disabled: postContent.lastPage,\n                children: /*#__PURE__*/_jsxDEV(PaginationLink, {\n                  next: true,\n                  children: \"Next\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Services, \"w1zWpoV2i6miptazRP5G7DU7a00=\");\n\n_c = Services;\nexport default Services;\n\nvar _c;\n\n$RefreshReg$(_c, \"Services\");","map":{"version":3,"names":["React","useState","useEffect","Row","Col","Pagination","PaginationItem","PaginationLink","Container","Base","loadPostByCat","Services","postContent","setPostContent","then","data","console","log","catch","error","changePage","pageNumber","pageSize","lastPage","loadAllPosts","content","totalPages","totalElements","toast","size","offset","Array","map","item","index"],"sources":["C:/Users/patil/Desktop/Blog Application Project/Test/blog-app-main (2)/blog-app-main/src/pages/Services.jsx"],"sourcesContent":["import React from 'react'\nimport { useState } from 'react'\nimport { useEffect } from 'react'\nimport { Row, Col, Pagination, PaginationItem, PaginationLink, Container } from 'reactstrap'\nimport Base from \"../components/Base\";\nimport { loadPostByCat } from \"../services/post-service\";\nconst Services = () => {\n  //defining postContent\n  const [postContent, setPostContent] = useState(null);\n\n  // to call a function for a first Time\n  useEffect(() => {\n    //load all posts from server\n    loadPostByCat()\n      .then((data) => {\n        console.log(data);\n        setPostContent(data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n\n  const changePage = (pageNumber = 0, pageSize = 5) => {\n\n    if (pageNumber > postContent.pageNumber && postContent.lastPage) {\n        return\n    }\n    if (pageNumber < postContent.pageNumber && postContent.pageNumber == 0) {\n        return\n    }\n    loadAllPosts(pageNumber, pageSize).then(data => {\n\n\n        setPostContent({\n            content: [...postContent.content, ...data.content],\n            totalPages: data.totalPages,\n            totalElements: data.totalElements,\n            pageSize: data.pageSize,\n            lastPage: data.lastPage,\n            pageNumber: data.pageNumber\n        })\n\n        console.log(data);\n\n    }).catch(error => {\n        toast.error(\"Error in loading posts\")\n\n    })\n}\n\n  return (\n    <Base>\n    <div className=\"container-fluid pt-5 pe-1 ps-1\">\n      <Row>\n        <Col\n          md={{\n            size: 10,\n            offset: 1,\n          }}\n        >\n          <h1>Blogs Count ( {postContent?.totalElements} )</h1>\n\n          <Container className='mt-3'>\n\n                        <Pagination size='lg'>\n                            <PaginationItem onClick={() => changePage(postContent.pageNumber-1)} disabled={postContent.pageNumber == 0}>\n                                <PaginationLink previous>\n                                    Previous\n                                </PaginationLink>\n                            </PaginationItem>\n\n                            {\n                                [...Array(postContent.totalPages)].map((item, index) => (\n\n\n                                    <PaginationItem onClick={() => changePage(index)} active={index == postContent.pageNumber} key={index}>\n                                        <PaginationLink>\n\n                                            {index + 1}\n\n                                        </PaginationLink>\n                                    </PaginationItem>\n\n                                ))\n                            }\n\n\n                            <PaginationItem onClick={() => changePage(postContent.pageNumber+1)} disabled={postContent.lastPage}>\n                                <PaginationLink next>\n                                    Next\n                                </PaginationLink>\n                            </PaginationItem>\n                        </Pagination>\n\n                    </Container>\n        </Col>\n      </Row>\n      </div>\n    </Base>\n  );\n};\n\nexport default Services;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}