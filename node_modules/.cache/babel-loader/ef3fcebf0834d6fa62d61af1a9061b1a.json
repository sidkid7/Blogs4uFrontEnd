{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\patil\\\\Desktop\\\\Blog Application Project\\\\Test\\\\blog-app-main (2)\\\\blog-app-main\\\\src\\\\pages\\\\Services.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { Row, Col, Pagination, PaginationItem, PaginationLink, Container } from \"reactstrap\";\nimport Base from \"../components/Base\";\nimport { loadPostByCat } from \"../services/post-service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Services = () => {\n  _s();\n\n  //defining postContent\n  const [postContent, setPostContent] = useState({\n    content: [],\n    totalPages: '',\n    totalElements: '',\n    pageSize: '',\n    lastPage: false,\n    pageNumber: ''\n  }); // to call a function for a first Time\n\n  useEffect(() => {\n    //load all posts from server\n    loadPostByCat().then(data => {\n      console.log(data);\n      setPostContent(data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n\n  const changePage = function () {\n    let pageNumber = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let pageSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 5;\n\n    if (pageNumber > postContent.pageNumber && postContent.lastPage) {\n      return;\n    }\n\n    if (pageNumber < postContent.pageNumber && postContent.pageNumber == 0) {\n      return;\n    }\n\n    loadPostByCat(pageNumber, pageSize).then(data => {\n      setPostContent({\n        content: [...postContent.content, ...data.content],\n        totalPages: data.totalPages,\n        totalElements: data.totalElements,\n        pageSize: data.pageSize,\n        lastPage: data.lastPage,\n        pageNumber: data.pageNumber\n      });\n      console.log(data);\n    }).catch(error => {\n      toast.error(\"Error in loading posts\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Base, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid pt-5 pe-1 ps-1\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: {\n            size: 10,\n            offset: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\"Blogs Count ( \", postContent === null || postContent === void 0 ? void 0 : postContent.totalElements, \" )\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Container, {\n            className: \"mt-3\",\n            children: /*#__PURE__*/_jsxDEV(Pagination, {\n              size: \"lg\",\n              children: [/*#__PURE__*/_jsxDEV(PaginationItem, {\n                onClick: () => changePage(postContent.pageNumber - 1),\n                disabled: postContent.pageNumber == 0,\n                children: /*#__PURE__*/_jsxDEV(PaginationLink, {\n                  previous: true,\n                  children: \"Previous\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 17\n              }, this), [...Array(postContent.totalPages)].map((item, index) => /*#__PURE__*/_jsxDEV(PaginationItem, {\n                onClick: () => changePage(index),\n                active: index == postContent.pageNumber,\n                children: /*#__PURE__*/_jsxDEV(PaginationLink, {\n                  children: index + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 21\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 19\n              }, this)), /*#__PURE__*/_jsxDEV(PaginationItem, {\n                onClick: () => changePage(postContent.pageNumber + 1),\n                disabled: postContent.lastPage,\n                children: /*#__PURE__*/_jsxDEV(PaginationLink, {\n                  next: true,\n                  children: \"Next\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Services, \"KfukDaJ1XSLXEZGBlrG3QKGqwTY=\");\n\n_c = Services;\nexport default Services;\n\nvar _c;\n\n$RefreshReg$(_c, \"Services\");","map":{"version":3,"names":["React","useState","useEffect","Row","Col","Pagination","PaginationItem","PaginationLink","Container","Base","loadPostByCat","Services","postContent","setPostContent","content","totalPages","totalElements","pageSize","lastPage","pageNumber","then","data","console","log","catch","error","changePage","toast","size","offset","Array","map","item","index"],"sources":["C:/Users/patil/Desktop/Blog Application Project/Test/blog-app-main (2)/blog-app-main/src/pages/Services.jsx"],"sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport {\n  Row,\n  Col,\n  Pagination,\n  PaginationItem,\n  PaginationLink,\n  Container,\n} from \"reactstrap\";\nimport Base from \"../components/Base\";\nimport { loadPostByCat } from \"../services/post-service\";\nconst Services = () => {\n  //defining postContent\n  const [postContent, setPostContent] = useState({\n    content: [],\n    totalPages: '',\n    totalElements: '',\n    pageSize: '',\n    lastPage: false,\n    pageNumber: ''\n  });\n\n  // to call a function for a first Time\n  useEffect(() => {\n    //load all posts from server\n    loadPostByCat()\n      .then((data) => {\n        console.log(data);\n        setPostContent(data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  \n\n  const changePage = (pageNumber = 0, pageSize = 5) => {\n    if (pageNumber > postContent.pageNumber && postContent.lastPage) {\n      return;\n    }\n    if (pageNumber < postContent.pageNumber && postContent.pageNumber == 0) {\n      return;\n    }\n    loadPostByCat(pageNumber, pageSize)\n      .then((data) => {\n        setPostContent({\n          content: [...postContent.content, ...data.content],\n          totalPages: data.totalPages,\n          totalElements: data.totalElements,\n          pageSize: data.pageSize,\n          lastPage: data.lastPage,\n          pageNumber: data.pageNumber,\n        });\n\n        console.log(data);\n      })\n      .catch((error) => {\n        toast.error(\"Error in loading posts\");\n      });\n  };\n\n  return (\n    <Base>\n      <div className=\"container-fluid pt-5 pe-1 ps-1\">\n        <Row>\n          <Col\n            md={{\n              size: 10,\n              offset: 1,\n            }}\n          >\n            <h1>Blogs Count ( {postContent?.totalElements} )</h1>\n\n            <Container className=\"mt-3\">\n              <Pagination size=\"lg\">\n                <PaginationItem\n                  onClick={() => changePage(postContent.pageNumber - 1)}\n                  disabled={postContent.pageNumber == 0}\n                >\n                  <PaginationLink previous>Previous</PaginationLink>\n                </PaginationItem>\n\n                {[...Array(postContent.totalPages)].map((item, index) => (\n                  <PaginationItem\n                    onClick={() => changePage(index)}\n                    active={index == postContent.pageNumber}\n                    key={index}\n                  >\n                    <PaginationLink>{index + 1}</PaginationLink>\n                  </PaginationItem>\n                ))}\n\n                <PaginationItem\n                  onClick={() => changePage(postContent.pageNumber + 1)}\n                  disabled={postContent.lastPage}\n                >\n                  <PaginationLink next>Next</PaginationLink>\n                </PaginationItem>\n              </Pagination>\n            </Container>\n          </Col>\n        </Row>\n      </div>\n    </Base>\n  );\n};\n\nexport default Services;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}