{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\patil\\\\Desktop\\\\Blog Application Project\\\\Test\\\\blog-app-main (2)\\\\blog-app-main\\\\src\\\\pages\\\\Services.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { loadAllPosts } from '../services/post-service';\nimport { Row, Col, Pagination, PaginationItem, PaginationLink, Container } from 'reactstrap';\nimport Post from './Post';\nimport { toast } from 'react-toastify';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NewFeed() {\n  _s();\n\n  const [postContent, setPostContent] = useState({\n    content: [],\n    totalPages: '',\n    totalElements: '',\n    pageSize: '',\n    lastPage: false,\n    pageNumber: ''\n  });\n  const [currentPage, setCurrentPage] = useState(0);\n  useEffect(() => {\n    console.log(\"loading posts\");\n    console.log(currentPage);\n    changePage(currentPage);\n  }, [currentPage]);\n\n  const changePage = function () {\n    let pageNumber = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let pageSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 5;\n\n    if (pageNumber > postContent.pageNumber && postContent.lastPage) {\n      return;\n    }\n\n    if (pageNumber < postContent.pageNumber && postContent.pageNumber == 0) {\n      return;\n    }\n\n    loadAllPosts(pageNumber, pageSize).then(data => {\n      setPostContent({\n        content: [...postContent.content, ...data.content],\n        totalPages: data.totalPages,\n        totalElements: data.totalElements,\n        pageSize: data.pageSize,\n        lastPage: data.lastPage,\n        pageNumber: data.pageNumber\n      });\n      console.log(data);\n    }).catch(error => {\n      toast.error(\"Error in loading posts\");\n    });\n  };\n\n  const changePageInfinite = () => {\n    console.log(\"page chagned\");\n    setCurrentPage(currentPage + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid pt-5 pe-1 ps-1\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: {\n          size: 10,\n          offset: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Blogs Count  ( \", postContent === null || postContent === void 0 ? void 0 : postContent.totalElements, \" )\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n          dataLength: postContent.content.length,\n          next: changePageInfinite,\n          hasMore: !postContent.lastPage,\n          loader: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 33\n          }, this),\n          endMessage: /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              textAlign: 'center'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Yay! You have seen it all\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this),\n          children: postContent.content.map((post, index) => /*#__PURE__*/_jsxDEV(Post, {\n            post: post\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n\n_s(NewFeed, \"ONqzIpYfZdriliGTfapHkGZRuNQ=\");\n\n_c = NewFeed;\nexport default NewFeed;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewFeed\");","map":{"version":3,"names":["React","useState","useEffect","loadAllPosts","Row","Col","Pagination","PaginationItem","PaginationLink","Container","Post","toast","InfiniteScroll","NewFeed","postContent","setPostContent","content","totalPages","totalElements","pageSize","lastPage","pageNumber","currentPage","setCurrentPage","console","log","changePage","then","data","catch","error","changePageInfinite","size","offset","length","textAlign","map","post","index"],"sources":["C:/Users/patil/Desktop/Blog Application Project/Test/blog-app-main (2)/blog-app-main/src/pages/Services.jsx"],"sourcesContent":["import React from 'react'\nimport { useState } from 'react'\nimport { useEffect } from 'react'\nimport { loadAllPosts } from '../services/post-service'\nimport { Row, Col, Pagination, PaginationItem, PaginationLink, Container } from 'reactstrap'\nimport Post from './Post'\nimport { toast } from 'react-toastify'\nimport InfiniteScroll from 'react-infinite-scroll-component'\nfunction NewFeed() {\n\n\n    const [postContent, setPostContent] = useState({\n        content: [],\n        totalPages: '',\n        totalElements: '',\n        pageSize: '',\n        lastPage: false,\n        pageNumber: ''\n\n    })\n\n    const [currentPage, setCurrentPage] = useState(0)\n\n    useEffect(() => {\n        console.log(\"loading posts\")\n        console.log(currentPage)\n        changePage(currentPage)\n\n    }, [currentPage])\n\n\n    const changePage = (pageNumber = 0, pageSize = 5) => {\n\n        if (pageNumber > postContent.pageNumber && postContent.lastPage) {\n            return\n        }\n        if (pageNumber < postContent.pageNumber && postContent.pageNumber == 0) {\n            return\n        }\n        loadAllPosts(pageNumber, pageSize).then(data => {\n\n\n            setPostContent({\n                content: [...postContent.content, ...data.content],\n                totalPages: data.totalPages,\n                totalElements: data.totalElements,\n                pageSize: data.pageSize,\n                lastPage: data.lastPage,\n                pageNumber: data.pageNumber\n            })\n\n            console.log(data);\n\n        }).catch(error => {\n            toast.error(\"Error in loading posts\")\n\n        })\n    }\n\n    const changePageInfinite = () => {\n        console.log(\"page chagned\")\n        setCurrentPage(currentPage + 1)\n\n    }\n\n    return (\n\n\n\n        <div className=\"container-fluid pt-5 pe-1 ps-1\">\n            <Row>\n                <Col md={\n                    {\n                        size: 10,\n                        offset: 1\n                    }\n                }>\n\n                    <h1>Blogs Count  ( {postContent?.totalElements} )</h1>\n\n                    <InfiniteScroll\n                        dataLength={postContent.content.length}\n                        next={changePageInfinite}\n                        hasMore={!postContent.lastPage}\n                        loader={<h4>Loading...</h4>}\n                        endMessage={\n                            <p style={{ textAlign: 'center' }}>\n                              <b>Yay! You have seen it all</b>\n                            </p>\n                          }\n\n\n                    >\n\n\n                        {\n                            postContent.content.map((post, index) => (\n                                <Post post={post} key={index} />\n                            ))\n                        }\n\n\n\n                    </InfiniteScroll>\n\n\n                    {/* <Container className='mt-3'>\n\n                        <Pagination size='lg'>\n                            <PaginationItem onClick={() => changePage(postContent.pageNumber-1)} disabled={postContent.pageNumber == 0}>\n                                <PaginationLink previous>\n                                    Previous\n                                </PaginationLink>\n                            </PaginationItem>\n\n                            {\n                                [...Array(postContent.totalPages)].map((item, index) => (\n\n\n                                    <PaginationItem onClick={() => changePage(index)} active={index == postContent.pageNumber} key={index}>\n                                        <PaginationLink>\n\n                                            {index + 1}\n\n                                        </PaginationLink>\n                                    </PaginationItem>\n\n                                ))\n                            }\n\n\n                            <PaginationItem onClick={() => changePage(postContent.pageNumber+1)} disabled={postContent.lastPage}>\n                                <PaginationLink next>\n                                    Next\n                                </PaginationLink>\n                            </PaginationItem>\n                        </Pagination>\n\n                    </Container> */}\n\n\n\n\n\n\n                </Col>\n            </Row>\n        </div>\n\n\n    )\n}\n\nexport default NewFeed"],"mappings":"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"},"metadata":{},"sourceType":"module"}