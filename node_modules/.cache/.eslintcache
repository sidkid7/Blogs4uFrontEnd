[{"C:\\Users\\patil\\Desktop\\Blog Application Project\\Frontend\\blog-app\\src\\index.js":"1","C:\\Users\\patil\\Desktop\\Blog Application Project\\Frontend\\blog-app\\src\\App.js":"2","C:\\Users\\patil\\Desktop\\Blog Application Project\\Frontend\\blog-app\\src\\reportWebVitals.js":"3","C:\\Users\\patil\\Desktop\\Blog Application Project\\Frontend\\blog-app\\src\\components\\Base.js":"4","C:\\Users\\patil\\Desktop\\Blog Application Project\\Frontend\\blog-app\\src\\pages\\About.js":"5","C:\\Users\\patil\\Desktop\\Blog Application Project\\Frontend\\blog-app\\src\\pages\\Home.js":"6","C:\\Users\\patil\\Desktop\\Blog Application Project\\Frontend\\blog-app\\src\\pages\\Login.js":"7","C:\\Users\\patil\\Desktop\\Blog Application Project\\Frontend\\blog-app\\src\\pages\\Signup.js":"8","C:\\Users\\patil\\Desktop\\Blog Application Project\\Frontend\\blog-app\\src\\components\\CustomNavbar.js":"9","C:\\Users\\patil\\Desktop\\Blog Application Project\\Frontend\\blog-app\\src\\pages\\Services.jsx":"10","C:\\Users\\patil\\Desktop\\Blog Application Project\\Frontend\\blog-app\\src\\Services\\user-service.js":"11","C:\\Users\\patil\\Desktop\\Blog Application Project\\Frontend\\blog-app\\src\\Services\\helper.js":"12"},{"size":536,"mtime":1662642418867,"results":"13","hashOfConfig":"14"},{"size":932,"mtime":1662752096973,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1662624865347,"results":"16","hashOfConfig":"14"},{"size":327,"mtime":1662647893905,"results":"17","hashOfConfig":"14"},{"size":222,"mtime":1662628555470,"results":"18","hashOfConfig":"14"},{"size":250,"mtime":1662648036766,"results":"19","hashOfConfig":"14"},{"size":2489,"mtime":1662741240837,"results":"20","hashOfConfig":"14"},{"size":4489,"mtime":1662756556082,"results":"21","hashOfConfig":"14"},{"size":2182,"mtime":1662734536908,"results":"22","hashOfConfig":"14"},{"size":197,"mtime":1662649343399,"results":"23","hashOfConfig":"14"},{"size":304,"mtime":1662751579154,"results":"24","hashOfConfig":"14"},{"size":150,"mtime":1662745460666,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"cd24t2",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\patil\\Desktop\\Blog Application Project\\Frontend\\blog-app\\src\\index.js",[],[],"C:\\Users\\patil\\Desktop\\Blog Application Project\\Frontend\\blog-app\\src\\App.js",["67","68","69"],[],"import logo from './logo.svg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button } from 'reactstrap';\nimport Base from './components/Base';\nimport {BrowserRouter,Routes,Route} from 'react-router-dom';\nimport Home from './pages/Home';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport About from './pages/About';\nimport Services from './pages/Services';\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    <ToastContainer position=\"bottom-center\" />\n    <Routes>\n      <Route path=\"/\" element={<Home/>} />\n      <Route path=\"/login\" element={<Login/>} />\n      <Route path=\"/signup\" element={<Signup/>} />\n      <Route path=\"/about\" element={<About/>} />\n      <Route path=\"/services\" element={<Services/>} />\n    </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","C:\\Users\\patil\\Desktop\\Blog Application Project\\Frontend\\blog-app\\src\\reportWebVitals.js",[],[],[],"C:\\Users\\patil\\Desktop\\Blog Application Project\\Frontend\\blog-app\\src\\components\\Base.js",[],[],"C:\\Users\\patil\\Desktop\\Blog Application Project\\Frontend\\blog-app\\src\\pages\\About.js",[],[],"C:\\Users\\patil\\Desktop\\Blog Application Project\\Frontend\\blog-app\\src\\pages\\Home.js",[],[],"C:\\Users\\patil\\Desktop\\Blog Application Project\\Frontend\\blog-app\\src\\pages\\Login.js",["70","71","72","73"],[],"import Base from \"../components/Base\";\r\nimport {\r\n  Label,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Col,\r\n  Container,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Row,\r\n  Button,\r\n  CardFooter,\r\n} from \"reactstrap\";\r\nimport { Link, NavLink as ReactLink, useNavigate } from \"react-router-dom\";\r\n\r\nconst Login = () => {\r\n  return (\r\n    // <Base>\r\n    <Container >\r\n\r\n      <Row className=\"mt-4\">\r\n        <Col\r\n          sm={{\r\n            size: 6,\r\n            offset: 0,\r\n          }}\r\n        >\r\n            <Container className=\"mt-5\">\r\n                <br></br><br></br><br></br><br></br><br></br>\r\n                <Link style={{ textDecoration: \"none\" }} tag={ReactLink} to=\"/\">\r\n          <h1 className=\"text-warning\">MyBlog</h1>\r\n          </Link>\r\n          <p>\r\n            <b>it helps you share your Knowledge,with the world.</b>\r\n          </p>\r\n          </Container>\r\n        </Col>\r\n        <Col\r\n        //   sm={{\r\n        //     size: 5,\r\n        //     offset: 7,\r\n        //   }}\r\n        >\r\n            <Container className=\"mt-5 col-11\">\r\n            <br></br><br></br>\r\n          <Card className=\"shadow p-3 mb-5 bg-white rounded\">\r\n            <CardBody>\r\n              <Form>\r\n                {/* Email field */}\r\n                <br></br>\r\n\r\n                <FormGroup>\r\n                  <Input type=\"text\" id=\"email\" placeholder=\"Email address\" />\r\n                </FormGroup>\r\n              \r\n\r\n                {/* password field */}\r\n\r\n                <FormGroup>\r\n                  <Input type=\"password\" id=\"password\" placeholder=\"Password\" />\r\n                </FormGroup>\r\n\r\n                <Container className=\"text-center\">\r\n                  <Button color=\"success\">Login</Button>\r\n                  <Button className=\"ms-2\" color=\"secondary\">\r\n                    Reset\r\n                  </Button>\r\n                  <br></br>\r\n                </Container>\r\n              </Form>\r\n            </CardBody>\r\n            <CardFooter>\r\n              <Container className=\"text-center\" >\r\n              \r\n                <p>Don't have accout yet?</p>\r\n                <Link style={{ textDecoration: \"none\" }} tag={ReactLink} to=\"/signup\">\r\n                <Button color=\"warning\">Create New Account</Button>\r\n                </Link>\r\n                <h6>&nbsp;</h6>\r\n              </Container>\r\n            </CardFooter>\r\n          </Card>\r\n          </Container>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n    //</Base>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\patil\\Desktop\\Blog Application Project\\Frontend\\blog-app\\src\\pages\\Signup.js",["74","75","76"],[],"import {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Col,\r\n  Container,\r\n  Form,\r\n  FormFeedback,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport { Link, NavLink as ReactLink, useNavigate } from \"react-router-dom\";\r\nimport Base from \"../components/Base\";\r\nimport { useState } from \"react\";\r\nimport { signUp } from \"../Services/user-service\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst Signup = () => {\r\n  const [data, setData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    about: \"\",\r\n  });\r\n\r\n  const [error, setError] = useState({\r\n    errors: {},\r\n    isError: false,\r\n  });\r\n\r\n  // handle change\r\n  const handleChange = (event, property) => {\r\n    //dynamic setting the values\r\n    setData({ ...data, [property]: event.target.value });\r\n  };\r\n\r\n  //reseting the form\r\n  const resetData = () => {\r\n    setData({\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      about: \"\",\r\n    });\r\n  };\r\n\r\n  //submit the form\r\n  const submitForm = (event) => {\r\n    event.preventDefault();\r\n\r\n    if(error.isError){\r\n      toast.error(\"Form data is invalid , correct all details then submit. \");\r\n      setError({...error,isError:false})\r\n      return;\r\n    }\r\n    console.log(data);\r\n    //data validate\r\n\r\n    //call server api for sending data\r\n    signUp(data)\r\n      .then((resp) => {\r\n        console.log(resp);\r\n        console.log(\"success log\");\r\n        toast.success(\"User is registered successfully !! user id \" + resp.id);\r\n        setData({\r\n          name: \"\",\r\n          email: \"\",\r\n          password: \"\",\r\n          about: \"\",\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        console.log(\"Error log\");\r\n        //handle errors in proper way\r\n        setError({\r\n          errors: error,\r\n          isError: true,\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    //<Base>\r\n    <Container>\r\n      <Row>\r\n        <Col sm={{ size: 6, offset: 3 }}>\r\n          <Container className=\"text-center mt-4 mb-4\">\r\n            <Link style={{ textDecoration: \"none\" }} tag={ReactLink} to=\"/\">\r\n              <h1 className=\"text-warning text-center\">\r\n                <b>MyBlog</b>\r\n              </h1>\r\n            </Link>\r\n          </Container>\r\n          <Card className=\"shadow p-3 mb-5 bg-white rounded\">\r\n            <CardHeader className=\"text-center\">\r\n              <h5>\r\n                <b>Create a new account</b>\r\n              </h5>\r\n              It's quick and easy.\r\n            </CardHeader>\r\n\r\n            <CardBody>\r\n              {/* creating registerbody */}\r\n              <Form onSubmit={submitForm}>\r\n                {/* namefild */}\r\n                <FormGroup>\r\n                  <Input type=\"text\" placeholder=\"Name\" id=\"name\"\r\n                   onChange={(e) => handleChange(e, \"name\")}\r\n                   value={data.name}\r\n                   />\r\n                  \r\n                </FormGroup>\r\n\r\n                {/* Emailfild */}\r\n                <FormGroup>\r\n                  <Input type=\"email\" placeholder=\"Email address\" id=\"email\"\r\n                  onChange={(e) => handleChange(e, \"email\")} \r\n                  value={data.email}\r\n                  />\r\n                </FormGroup>\r\n\r\n                {/* Passwordfild */}\r\n                <FormGroup>\r\n                  <Input type=\"password\" placeholder=\"New Password\" id=\"pass\" \r\n                  onChange={(e) => handleChange(e, \"password\")}\r\n                  value={data.password}\r\n                  />\r\n                </FormGroup>\r\n\r\n                {/* about field */}\r\n                <FormGroup>\r\n                  <Label for=\"about\">Write something about yourself</Label>\r\n                  <Input\r\n                    type=\"textarea\"\r\n                    placeholder=\"Enter here\"\r\n                    id=\"about\"\r\n                    style={{ height: \"100px\" }}\r\n                    onChange={(e) => handleChange(e, \"about\")}\r\n                    value={data.about}\r\n                  />\r\n                </FormGroup>\r\n                <Container className=\"text-center\">\r\n                  <Button color=\"success\">Register</Button>\r\n                  <Button onClick={resetData} color=\"secondary\" type=\"reset\" className=\"ms-2\">\r\n                    Reset\r\n                  </Button>\r\n                </Container>\r\n              </Form>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n    //</Base>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","C:\\Users\\patil\\Desktop\\Blog Application Project\\Frontend\\blog-app\\src\\components\\CustomNavbar.js",["77"],[],"import React, { useState } from \"react\";\r\nimport { NavLink as ReactLink, useNavigate } from \"react-router-dom\";\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  NavbarText,\r\n} from \"reactstrap\";\r\nconst CustomNavbar = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n  return (\r\n    <div>\r\n      <Navbar\r\n        // style={{ backgroundColor: \"#FFA500\" }}\r\n        color=\"warning\"\r\n        expand=\"md\"\r\n        fixed=\"\"\r\n        className=\"px-2\"\r\n      >\r\n        <NavbarBrand tag={ReactLink} to=\"/\">\r\n          <img\r\n            alt=\"logo\"\r\n            src=\"blogging.png\"\r\n            style={{\r\n              height: 30,\r\n              width: 30,\r\n            }}\r\n          />\r\n           &nbsp;&nbsp;MyBlogs\r\n        </NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"me-auto\" navbar>\r\n            <NavItem>\r\n              <NavLink tag={ReactLink} to=\"/about\">\r\n                About\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink tag={ReactLink} to=\"/login/\">\r\n                Login\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink tag={ReactLink} to=\"/signup/\">\r\n                Signup\r\n              </NavLink>\r\n            </NavItem>\r\n            <UncontrolledDropdown nav inNavbar>\r\n              <DropdownToggle nav caret>\r\n                More\r\n              </DropdownToggle>\r\n              <DropdownMenu right>\r\n                <DropdownItem tag={ReactLink} to=\"/services/\">\r\n                  Services\r\n                </DropdownItem>\r\n                <DropdownItem>Contacts us</DropdownItem>\r\n                <DropdownItem divider />\r\n                <DropdownItem>Github</DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n          </Nav>\r\n          <NavbarText>Github</NavbarText>\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomNavbar;\r\n","C:\\Users\\patil\\Desktop\\Blog Application Project\\Frontend\\blog-app\\src\\pages\\Services.jsx",[],[],"C:\\Users\\patil\\Desktop\\Blog Application Project\\Frontend\\blog-app\\src\\Services\\user-service.js",[],[],"C:\\Users\\patil\\Desktop\\Blog Application Project\\Frontend\\blog-app\\src\\Services\\helper.js",[],[],{"ruleId":"78","severity":1,"message":"79","line":1,"column":8,"nodeType":"80","messageId":"81","endLine":1,"endColumn":12},{"ruleId":"78","severity":1,"message":"82","line":4,"column":10,"nodeType":"80","messageId":"81","endLine":4,"endColumn":16},{"ruleId":"78","severity":1,"message":"83","line":5,"column":8,"nodeType":"80","messageId":"81","endLine":5,"endColumn":12},{"ruleId":"78","severity":1,"message":"83","line":1,"column":8,"nodeType":"80","messageId":"81","endLine":1,"endColumn":12},{"ruleId":"78","severity":1,"message":"84","line":3,"column":3,"nodeType":"80","messageId":"81","endLine":3,"endColumn":8},{"ruleId":"78","severity":1,"message":"85","line":6,"column":3,"nodeType":"80","messageId":"81","endLine":6,"endColumn":13},{"ruleId":"78","severity":1,"message":"86","line":16,"column":38,"nodeType":"80","messageId":"81","endLine":16,"endColumn":49},{"ruleId":"78","severity":1,"message":"87","line":9,"column":3,"nodeType":"80","messageId":"81","endLine":9,"endColumn":15},{"ruleId":"78","severity":1,"message":"86","line":15,"column":38,"nodeType":"80","messageId":"81","endLine":15,"endColumn":49},{"ruleId":"78","severity":1,"message":"83","line":16,"column":8,"nodeType":"80","messageId":"81","endLine":16,"endColumn":12},{"ruleId":"78","severity":1,"message":"86","line":2,"column":32,"nodeType":"80","messageId":"81","endLine":2,"endColumn":43},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Base' is defined but never used.","'Label' is defined but never used.","'CardHeader' is defined but never used.","'useNavigate' is defined but never used.","'FormFeedback' is defined but never used."]